/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scard;

import java.awt.Color;
import java.awt.Image;
import java.util.Arrays;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.io.ByteArrayOutputStream;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.math.BigInteger;
import java.security.KeyFactory;
import java.security.PublicKey;
import java.security.Signature;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.RSAPublicKeySpec;
import java.sql.Connection;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import static scard.MySQLConnect.getConnection;

/**
 *
 * @author Vu Tuan Anh
 */
public class MainForm extends javax.swing.JFrame {

    static NhanVien infoNhanVien;
    static Connect connect;
    static Connection connectMysql;
    private Boolean input = false;
    private boolean cardready = false;
    private boolean connected = false;
    public byte[] rsaPubKey = new byte[128];
    private int addDay = 0;
    String ramData;
    BigInteger modulusPubkey, exponentPubkey;

    /**
     * Creates new form SCForm
     */
    public MainForm() {
        infoNhanVien = new NhanVien();
        connect = new Connect();
        connectMysql = getConnection();
        if (connectMysql == null) {
            System.out.println("Kêt nối DATABASE thất bại!");
        } else {
            System.out.println("Kêt nối DATABASE thành công!");
        }
        initComponents();
    }

    //hien thi apdu lenh len GUI
    public void setCommandAPDU(byte[] cmnds, byte lc, byte[] data, byte le) {
        txt_cla.setText(connect.byteToHex(cmnds[0]));
        txt_ins.setText(connect.byteToHex(cmnds[1]));
        txt_p1.setText(connect.byteToHex(cmnds[2]));
        txt_p2.setText(connect.byteToHex(cmnds[3]));
        txt_lc.setText(connect.byteToHex(lc));
        //data
        String temp = "";
        for (int i = 0; i < data.length; i++) {
            temp += connect.byteToHex(data[i]);
            temp += " ";
        }
        txt_cmd.setText(temp);
        txt_le.setText(connect.byteToHex(le));
    }

    //hien thi apdu phan hoi len
    public void setResponseAPDU(byte[] datares, short le) {
        int status1 = connect.resAPDU.getSW1();
        int status2 = connect.resAPDU.getSW2();
        txt_sw1.setText(connect.shorttoHex((short) status1));
        txt_sw2.setText(connect.shorttoHex((short) status2));
        if (le != 0 && datares.length != 0) {
            //hien thi du lieu ra
            String temp = "";
            for (int i = 0; i < datares.length; i++) {
                temp += connect.byteToHex(datares[i]);
                temp += " ";
            }
            txt_respon.setText(temp);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPanel_info = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        anhthe = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_checkout = new javax.swing.JLabel();
        txt_manv = new javax.swing.JLabel();
        txt_hoten = new javax.swing.JLabel();
        txt_chucvu = new javax.swing.JLabel();
        Btn_thayanh = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txt_ngaysinh = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_checkin = new javax.swing.JLabel();
        addOneDay = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lab_showDay = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        txt_cla = new javax.swing.JTextField();
        txt_ins = new javax.swing.JTextField();
        txt_p1 = new javax.swing.JTextField();
        txt_p2 = new javax.swing.JTextField();
        txt_lc = new javax.swing.JTextField();
        txt_le = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        txt_cmd = new javax.swing.JTextField();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        txt_sw1 = new javax.swing.JTextField();
        txt_sw2 = new javax.swing.JTextField();
        txt_respon = new javax.swing.JTextField();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_pin = new javax.swing.JPasswordField();
        Btn_Xemtt = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btn_init = new javax.swing.JButton();
        btn_sendata = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        Button_Unblock = new javax.swing.JButton();
        Button_connect = new javax.swing.JButton();
        Button_Disconnect = new javax.swing.JButton();
        btn_changePIN = new javax.swing.JButton();
        btn_capnhat = new javax.swing.JButton();
        btn_checkin = new javax.swing.JButton();
        btn_checkout = new javax.swing.JButton();
        btn_thongke = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jInternalFrame1.setBackground(new java.awt.Color(255, 255, 255));
        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImages(getIconImages());
        setLocationByPlatform(true);

        jPanel_info.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_info.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("THẺ RA VÀO CÔNG TY");
        jPanel_info.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 180, 36));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Mã nhân viên:");
        jPanel_info.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 80, 25));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Họ tên:");
        jPanel_info.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 51, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Chức vụ:");
        jPanel_info.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, -1, 20));

        anhthe.setText("anhthe");
        anhthe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_info.add(anhthe, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 130, 180));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Giờ checkout:");
        jPanel_info.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, -1, -1));
        jPanel_info.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        txt_checkout.setText("00:00:00");
        jPanel_info.add(txt_checkout, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, 160, -1));

        txt_manv.setText("null");
        jPanel_info.add(txt_manv, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 170, 22));

        txt_hoten.setText("null");
        jPanel_info.add(txt_hoten, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 170, 22));

        txt_chucvu.setText("null");
        jPanel_info.add(txt_chucvu, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 170, 20));

        Btn_thayanh.setBackground(new java.awt.Color(51, 204, 0));
        Btn_thayanh.setText("Thay ảnh");
        Btn_thayanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_thayanhActionPerformed(evt);
            }
        });
        jPanel_info.add(Btn_thayanh, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 90, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Ngày sinh:");
        jPanel_info.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, -1, 20));

        txt_ngaysinh.setText("null");
        jPanel_info.add(txt_ngaysinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 170, 20));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Giờ checkin:");
        jPanel_info.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, -1, 30));

        txt_checkin.setText("00:00:00");
        jPanel_info.add(txt_checkin, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 260, 160, 30));

        addOneDay.setText("+1 day");
        addOneDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOneDayActionPerformed(evt);
            }
        });
        jPanel_info.add(addOneDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, -1, -1));

        jLabel4.setText("Time:");
        jPanel_info.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 420, -1, -1));

        lab_showDay.setText("00:00 01/01/1990");
        jPanel_info.add(lab_showDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 420, 110, -1));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel68.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel68.setText("APDU Lệnh");
        jPanel11.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 12, 97, 28));

        jLabel69.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel69.setText("CLA");
        jLabel69.setToolTipText("");
        jPanel11.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 46, 60, 39));

        jLabel70.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel70.setText("INS");
        jPanel11.add(jLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 46, 59, 39));

        jLabel71.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel71.setText("P1");
        jPanel11.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 46, 59, 38));

        jLabel72.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel72.setText("P2");
        jPanel11.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(286, 46, 59, 39));

        jLabel73.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel73.setText("LC");
        jPanel11.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 46, 60, 39));

        jLabel74.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel74.setText("LE");
        jPanel11.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(433, 46, 60, 38));

        txt_cla.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jPanel11.add(txt_cla, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 91, 60, 39));

        txt_ins.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jPanel11.add(txt_ins, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 91, 59, 39));

        txt_p1.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jPanel11.add(txt_p1, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 91, 59, 38));

        txt_p2.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        txt_p2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_p2ActionPerformed(evt);
            }
        });
        jPanel11.add(txt_p2, new org.netbeans.lib.awtextra.AbsoluteConstraints(286, 91, 59, 39));

        txt_lc.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jPanel11.add(txt_lc, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 91, 60, 39));

        txt_le.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jPanel11.add(txt_le, new org.netbeans.lib.awtextra.AbsoluteConstraints(433, 91, 60, 38));

        jLabel75.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel75.setText("Dữ liệu:");
        jPanel11.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 141, 41, 39));
        jPanel11.add(txt_cmd, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 141, 431, 39));

        jLabel76.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel76.setText("SW1");
        jPanel11.add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(331, 180, 48, 30));

        jLabel77.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel77.setText("SW2");
        jPanel11.add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 180, 48, 30));
        jPanel11.add(txt_sw1, new org.netbeans.lib.awtextra.AbsoluteConstraints(331, 216, 48, 39));
        jPanel11.add(txt_sw2, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 217, 48, 38));

        txt_respon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_responActionPerformed(evt);
            }
        });
        jPanel11.add(txt_respon, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 265, 429, 39));

        jLabel78.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel78.setText("APDU phản hồi");
        jPanel11.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 197, 120, 30));

        jLabel79.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel79.setText("Dữ liệu:");
        jPanel11.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 265, 49, 39));

        jLabel3.setText("Nhập mã PIN:");

        txt_pin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_pinActionPerformed(evt);
            }
        });

        Btn_Xemtt.setBackground(new java.awt.Color(51, 204, 0));
        Btn_Xemtt.setText("Enter");
        Btn_Xemtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_XemttActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(225, 106, 40));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_init.setText("Khởi tạo thẻ");
        btn_init.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_initActionPerformed(evt);
            }
        });
        jPanel5.add(btn_init, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 160, 30));

        btn_sendata.setText("Gửi đến Applet");
        btn_sendata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sendataActionPerformed(evt);
            }
        });
        jPanel5.add(btn_sendata, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 160, 30));

        btn_clear.setText("Xóa Thẻ");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        jPanel5.add(btn_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 160, 30));

        Button_Unblock.setText("Mở khóa thẻ");
        Button_Unblock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_UnblockActionPerformed(evt);
            }
        });
        jPanel5.add(Button_Unblock, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 160, 30));

        Button_connect.setText("Kết nối");
        Button_connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_connectActionPerformed(evt);
            }
        });
        jPanel5.add(Button_connect, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 160, 30));

        Button_Disconnect.setText("Ngắt kết nối");
        Button_Disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_DisconnectActionPerformed(evt);
            }
        });
        jPanel5.add(Button_Disconnect, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 160, 32));

        btn_changePIN.setText("Thay đổi mã PIN");
        btn_changePIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_changePINActionPerformed(evt);
            }
        });
        jPanel5.add(btn_changePIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 160, 30));

        btn_capnhat.setText("Đổi thông tin");
        btn_capnhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_capnhatActionPerformed(evt);
            }
        });
        jPanel5.add(btn_capnhat, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 160, 30));

        btn_checkin.setText("Checkin");
        btn_checkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_checkinActionPerformed(evt);
            }
        });
        jPanel5.add(btn_checkin, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 160, 30));

        btn_checkout.setText("Checkout");
        btn_checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_checkoutActionPerformed(evt);
            }
        });
        jPanel5.add(btn_checkout, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 160, 30));

        btn_thongke.setText("Thống kê");
        btn_thongke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thongkeActionPerformed(evt);
            }
        });
        jPanel5.add(btn_thongke, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 160, 30));

        jPanel6.setBackground(new java.awt.Color(225, 106, 40));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel_info, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(45, 45, 45)
                        .addComponent(txt_pin, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(Btn_Xemtt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)))
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel_info, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_pin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btn_Xemtt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_DisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_DisconnectActionPerformed
        if (connect.disconnectApplet() == true) {
            txt_manv.setText("");
            txt_hoten.setText("");
            txt_chucvu.setText("");
            txt_pin.setText("");
            txt_checkout.setText("");
            anhthe.setIcon(null);
            Button_connect.setText("Kết nối");
            Button_connect.setBackground(Color.gray);
            Button_Disconnect.setText("Đã ngắt kết nối");
            Button_Disconnect.setBackground(Color.red);
            txt_respon.setText("");
            txt_sw1.setText("");
            txt_sw2.setText("");
            txt_cmd.setText("");
            txt_cla.setText("");
            txt_ins.setText("");
            txt_p1.setText("");
            txt_p2.setText("");
            txt_lc.setText("");
            txt_le.setText("");
            connected = false;
            cardready = false;
        } else {
            JOptionPane.showMessageDialog(this, "Ngắt kết nối không thành công.");
        }
    }//GEN-LAST:event_Button_DisconnectActionPerformed

    private void Button_connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_connectActionPerformed
        if (connect.connectApplet() == true) {//thiet lap ket noi
            byte[] cmd = {(byte) 0x00, (byte) 0xA4, (byte) 0x04, (byte) 0x00};// select
            //mang data gui di la RID,PIX
            byte[] data = {(byte) 0x12, (byte) 0x12, (byte) 0x12, (byte) 0x12, (byte) 0x12, (byte) 0x00, (byte) 0x01};
            byte lc = 7;
            byte le_expect = 2;
            setCommandAPDU(cmd, lc, data, le_expect);//hien thi apdu cmd
            connect.sendAPDUtoApplet(cmd, data);
            byte[] dataRes = connect.resAPDU.getData();
            int le = connect.resAPDU.getNr();
            setResponseAPDU(dataRes, (short) le);//hien thi du lieu phan hoi tu applet
            Button_connect.setText("Đã kết nối");
            Button_connect.setBackground(Color.green);
            Button_Disconnect.setText("Ngắt kết nối");
            Button_Disconnect.setBackground(Color.gray);
            connected = true;
            Date currentDate = new Date();

            // convert date to calendar
            Calendar c = Calendar.getInstance();
            c.setTime(currentDate);

            // manipulate date
            c.add(Calendar.DATE, addDay);

            // convert calendar to date
            Date currentDatePlusOne = c.getTime();

            lab_showDay.setText(new SimpleDateFormat("HH:mm dd/MM/yyyy").format(currentDatePlusOne));
        } else {
            JOptionPane.showMessageDialog(this, "Kết nối không thành công. Hãy thử lại.");
        }
    }//GEN-LAST:event_Button_connectActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        if (connected == true) {
            if (input == false) {
                JOptionPane.showMessageDialog(null, "Thẻ chưa có dữ liệu.");
            } else {
                byte[] cmd = {(byte) 0xA0, (byte) 0x18, (byte) 0x00, (byte) 0x00};
                byte[] data = {0};
                setCommandAPDU(cmd, (byte) 0, data, (byte) 0);//hien thi apdu cmd len GUI
                connect.sendAPDUtoApplet(cmd);
                byte[] dataRes = connect.resAPDU.getData();
                int le = connect.resAPDU.getNr();
                setResponseAPDU(dataRes, (short) le);//hien thi du lieu phan hoi tu applet
                txt_manv.setText("");
                txt_hoten.setText("");
                txt_ngaysinh.setText("");
                txt_chucvu.setText("");
                txt_pin.setText("");
                txt_checkin.setText("");
                txt_checkout.setText("");
                JOptionPane.showMessageDialog(null, "Thẻ đã xóa dữ liệu.");
                input = false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ");
        }
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_initActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_initActionPerformed
        if (connected == true) {
            if (input == false) {
                Formnhap initform = new Formnhap();
                initform.setVisible(true);
                initform.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            } else {
                JOptionPane.showMessageDialog(null, "Thẻ đã có dữ liệu");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ");
        }
    }//GEN-LAST:event_btn_initActionPerformed

    private void txt_responActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_responActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_responActionPerformed

    private void txt_p2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_p2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_p2ActionPerformed

    private void Button_UnblockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_UnblockActionPerformed
        if (connected == true) {
            byte[] cmd = {(byte) 0xA0, (byte) 0x20, (byte) 0x00, (byte) 0x00};
            byte[] data = {0};
            setCommandAPDU(cmd, (byte) 0, data, (byte) 0);//hien thi apdu cmd len GUI
            connect.sendAPDUtoApplet(cmd);
            byte[] dataRes = connect.resAPDU.getData();
            int le = connect.resAPDU.getNr();
            setResponseAPDU(dataRes, (short) le);//hien thi du lieu phan hoi tu applet
            JOptionPane.showMessageDialog(null, "Thẻ đã được mở khóa.");
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ");
        }
    }//GEN-LAST:event_Button_UnblockActionPerformed

    private void btn_sendataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sendataActionPerformed
        // xử lí gửi data qua applet
        if (connected == true) {
            if (input == false) {
                if (rootPaneCheckingEnabled) {
                    setImage(infoNhanVien.getAvatar());
                    getImage(infoNhanVien.getAvatar());
                    //chuyen du lieu xuong applet
                    String manv = infoNhanVien.getMaNV();
                    String hoten = infoNhanVien.getHoten();
                    String ngaysinh = infoNhanVien.getNgaysinh();
                    String pin = infoNhanVien.getPin();
                    String chucvu = infoNhanVien.getChucvu();
                    String arraysend = manv.concat(".").concat(hoten).concat(".").concat(ngaysinh).concat(".").concat(chucvu).concat(".").concat(pin);
                    System.out.println("send:" + arraysend);
                    int lc = arraysend.length();
                    byte[] cmd = {(byte) 0xA0, (byte) 0x10, (byte) 0x00, (byte) 0x00};
                    byte[] data = arraysend.getBytes();
                    setCommandAPDU(cmd, (byte) lc, data, (byte) 0);
                    connect.sendAPDUtoApplet(cmd, data);
                    byte[] dataRes = connect.resAPDU.getData();
                    int le = connect.resAPDU.getNr();
                    setResponseAPDU(dataRes, (byte) le);//hien thi du lieu phan hoi tu applet
                    String tach = new String(dataRes);
                    System.out.print("dataRes:" + tach);
                    String[] a = tach.split(":");
                    String st = a[0];
                    String ht = a[1];
                    String ns = a[2];
                    String cv = a[3];
                    txt_manv.setText(st);
                    txt_hoten.setText(ht);
                    txt_ngaysinh.setText(ns);
                    txt_chucvu.setText(cv);
                    input = true;
                    getPublicKey();
                    int i = MySQLConnect.saveToDatabase(manv, modulusPubkey + "/" + exponentPubkey, "", ""); // khởi tạo card lưu vào database
                    if (i == 1) {
                        System.out.println("\nLưu vào database thành công");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Thẻ đã có dữ liệu.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ");
        }
    }//GEN-LAST:event_btn_sendataActionPerformed

    private void Btn_XemttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_XemttActionPerformed
        // lấy thông tin thẻ khi nhập pin
        if (connected == true) {
            String pin = Arrays.toString(txt_pin.getPassword());
            String pinDefault = Arrays.toString(new int[]{1, 2, 3, 1, 2, 3});
            boolean verify = checkVerifyUser();
            int check = check_pin(pin);
            if (check == 0 && verify) {
                if (pinDefault.compareTo(pin) == 0) { // lần đầu login có thông báo
                    JOptionPane.showMessageDialog(null, "Đăng nhập vào thẻ thành công!");
                }
                cardready = true;
                getImage(infoNhanVien.getAvatar());
                byte[] cmd = {(byte) 0xA0, (byte) 0x11, (byte) 0x00, (byte) 0x00};
                byte[] data = {0};
                setCommandAPDU(cmd, (byte) 0, data, (byte) 0);
                connect.sendAPDUtoApplet(cmd);
                byte[] dataRes = connect.resAPDU.getData();
                int le = connect.resAPDU.getNr();
                setResponseAPDU(dataRes, (byte) le);
                String tach = new String(dataRes);
                System.out.println("a:" + tach);
                String[] a = tach.split(":");
                String ma = a[0];
                String ht = a[1];
                String ns = a[2];
                String cv = a[3];
                txt_manv.setText(ma);
                txt_hoten.setText(ht);
                txt_ngaysinh.setText(ns);
                txt_chucvu.setText(cv);
                List dataDB = MySQLConnect.queryDatabase(ma);
                System.out.println("\nList data từ database: " + dataDB.toString());
                if (pinDefault.compareTo(pin) == 0) { // nếu pin trùng vs pin mặc định thì yêu cầu đổi pin
                    UpdatePINFirst updatepin = new UpdatePINFirst();
                    updatepin.setLocationRelativeTo(null);
                    updatepin.setVisible(true);
                    updatepin.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    cardready = false; // bắt login lại với password mới
                }
            } else if (check == 4) {
                JOptionPane.showMessageDialog(null, "Bạn đã nhập sai quá số lần cho phép. Thẻ đã bị khóa!");
            } else {
                JOptionPane.showMessageDialog(null, "Mã PIN sai. Vui lòng nhập lại! Bạn còn " + check + " lần thử.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ");
        }
    }//GEN-LAST:event_Btn_XemttActionPerformed

    private void txt_pinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_pinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_pinActionPerformed

    private void btn_capnhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_capnhatActionPerformed
        boolean verify = checkVerifyUser();
        if (connected == true && cardready && verify) {
            UpdateInfoForm updateinfo = new UpdateInfoForm(txt_manv.getText(), txt_hoten.getText(), txt_ngaysinh.getText(), txt_chucvu.getText());
            updateinfo.setLocationRelativeTo(null);
            updateinfo.setVisible(true);
            updateinfo.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ");
        }
    }//GEN-LAST:event_btn_capnhatActionPerformed

    private void btn_changePINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_changePINActionPerformed
        if (connected == true && cardready == true) {
            UpdatePIN updatepin = new UpdatePIN();
            updatepin.setLocationRelativeTo(null);
            updatepin.setVisible(true);
            updatepin.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ");
        }
    }//GEN-LAST:event_btn_changePINActionPerformed

    private void Btn_thayanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_thayanhActionPerformed
        if (connected == true && cardready == true) {
            JFileChooser fc = new JFileChooser();
            int returnValue = fc.showOpenDialog(this);
            if (returnValue == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                BufferedImage bimage;
                try {
                    bimage = ImageIO.read(file);
                    ByteArrayOutputStream baos = new ByteArrayOutputStream();
                    ImageIO.write(bimage, "jpg", baos);
                    byte[] img = baos.toByteArray();
                    setImage(img);
                    getImage(img);
                    infoNhanVien.setAvatar(img);
                    JOptionPane.showMessageDialog(this, "Thay ảnh thành công.");
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ.");
        }
    }//GEN-LAST:event_Btn_thayanhActionPerformed

    private void btn_checkinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_checkinActionPerformed
        boolean verify = checkVerifyUser();
        if (connected == true && cardready && verify) {
            boolean allowCheckin = true;
            List dataCheckin = MySQLConnect.queryDatabase(infoNhanVien.getMaNV());
            String checkinData = dataCheckin.toArray()[2].toString();
            if (!checkinData.isEmpty()) { // xử lý xem nhân viên đã checkin ngày hôm nay chưa
                String[] times = checkinData.split("-");
                String now = getTime();
                for (int i = 0; i < times.length; i++) {
                    String date = times[i].split(" ")[1]; // lấy chuỗi ngày tháng năm trong data trả về để equals với nowF
                    if (date.equals(now.split(" ")[1])) {
                        allowCheckin = false;
                    }
                }
            }

            if (allowCheckin) {
                String now = getTime();
                byte[] cmd = {(byte) 0xA0, (byte) 0x16, (byte) 0x00, (byte) 0x00};
                byte[] data = now.getBytes();
                System.out.println("send checkin: " + now);
                connect.sendAPDUtoApplet(cmd, data);
                String dataSend = !checkinData.isEmpty() ? checkinData + "-" + now : now;
                int result = MySQLConnect.setTimeCheck(true, infoNhanVien.getMaNV(), dataSend);
                if (result == 1) {
                    System.out.println("Lưu time checkin vào database thành công");
                }
                if (connect.resAPDU.getSW1() == 0x90) {
                    JOptionPane.showMessageDialog(this, "Checkin thành công.");
                    txt_checkin.setText(now);
                } else {
                    JOptionPane.showMessageDialog(this, "Checkin không thành công.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Bạn đã checkin rồi.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ");
        }
    }//GEN-LAST:event_btn_checkinActionPerformed

    private void btn_checkoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_checkoutActionPerformed
        boolean verify = checkVerifyUser();
        if (connected == true && cardready && verify) {
            boolean allowCheckout = true;
            List dataCheckin = MySQLConnect.queryDatabase(infoNhanVien.getMaNV());
            String checkoutData = dataCheckin.toArray()[3].toString();
            if (!checkoutData.isEmpty()) { // xử lý xem nhân viên đã checkout ngày hôm nay chưa
                String[] times = checkoutData.split("-");
                String now = getTime();
                for (int i = 0; i < times.length; i++) {
                    String date = times[i].split(" ")[1];
                    if (date.equals(now.split(" ")[1])) {
                        allowCheckout = false;
                    }
                }
            }
            if (allowCheckout) {
                String now = getTime();
                byte[] cmd = {(byte) 0xA0, (byte) 0x17, (byte) 0x00, (byte) 0x00};
                byte[] data = now.getBytes();
                System.out.println("send checkout: " + now);
                connect.sendAPDUtoApplet(cmd, data);
                String dataSend = !checkoutData.isEmpty() ? checkoutData + "-" + now : now;
                int result = MySQLConnect.setTimeCheck(false, infoNhanVien.getMaNV(), dataSend);
                if (result == 1) {
                    System.out.println("Lưu time checkout vào database thành công");
                }
                if (connect.resAPDU.getSW1() == 0x90) {
                    JOptionPane.showMessageDialog(this, "Checkout thành công.");
                    txt_checkout.setText(now);
                } else {
                    JOptionPane.showMessageDialog(this, "Checkout không thành công.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Bạn đã checkout rồi.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ");
        }
    }//GEN-LAST:event_btn_checkoutActionPerformed

    private void btn_thongkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thongkeActionPerformed
        if (connected == true) {
            ThongKe thongke = new ThongKe(txt_manv.getText(), txt_hoten.getText(), txt_ngaysinh.getText(), txt_chucvu.getText());
            thongke.setLocationRelativeTo(null);
            thongke.setVisible(true);
            thongke.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        } else {
            JOptionPane.showMessageDialog(null, "Chưa connect thẻ");
        }
    }//GEN-LAST:event_btn_thongkeActionPerformed

    private void addOneDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOneDayActionPerformed
        addDay++;
        Date currentDate = new Date();

        // convert date to calendar
        Calendar c = Calendar.getInstance();
        c.setTime(currentDate);

        // manipulate date
        c.add(Calendar.DATE, addDay);

        // convert calendar to date
        Date currentDatePlusOne = c.getTime();

        lab_showDay.setText(new SimpleDateFormat("HH:mm dd/MM/yyyy").format(currentDatePlusOne));
    }//GEN-LAST:event_addOneDayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }

        });
    }

    private void setImage(byte[] img) {
        if (img == null) {
            return;
        }
        byte[] cmd = {(byte) 0xA0, (byte) 0x12, (byte) 0x01, (byte) 0x00};
        connect.sendAPDUtoApplet(cmd);
        int sendlen = img.length;
        System.out.println("ảnh gửi:" + img);
        byte[] cmnd = {(byte) 0xA0, (byte) 0x12, (byte) 0x02, (byte) 0x00};
        int pointer = 0;
        byte[] temp = new byte[255];
        int datalen = 255;
        while (sendlen > 0) {
            System.arraycopy(img, pointer, temp, 0, datalen);
            connect.sendAPDUtoApplet(cmnd, temp);
            pointer += 255;
            sendlen -= 255;
            if (sendlen < 255) {
                datalen = sendlen;
            }
        }
    }

    private void getImage(byte[] img) {
        if (img == null) {
            return;
        }
        try {
            byte[] cmd = {(byte) 0xA0, (byte) 0x13, (byte) 0x01, (byte) 0x00};
            connect.sendAPDUtoApplet(cmd);
            int sendlen = img.length;
            byte[] cmnd = {(byte) 0xA0, (byte) 0x13, (byte) 0x02, (byte) 0x00};
            byte[] resimg = new byte[sendlen];
            int pointer = 0;
            int datalen = 255;
            while (sendlen > 0) {
                connect.sendAPDUtoApplet(cmnd);
                byte[] temp = connect.resAPDU.getData();
                System.arraycopy(temp, 0, resimg, pointer, datalen);
                pointer += 255;
                sendlen -= 255;
                if (sendlen < 255) {
                    datalen = sendlen;
                }
            }
            System.out.println("ảnh res:" + resimg);
            ByteArrayInputStream bais = new ByteArrayInputStream(img);
            BufferedImage b;
            b = ImageIO.read(bais);
            ImageIcon icon = new ImageIcon(b.getScaledInstance(anhthe.getWidth(), anhthe.getHeight(), Image.SCALE_SMOOTH));
            icon.getImage();
            anhthe.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
//        try{
//            b = ImageIO.read(bais);
//            ImageIcon icon= new ImageIcon(b);
//            icon.getImage();
//            anhthe.setIcon(icon);
//        }catch (Exception e){
//            e.printStackTrace();
//        }

    public int check_pin(String pin) {
        short lc = (short) pin.length(); //do dai du lieu gui vao applet
        short le = 1;//du lieu nhan mong doi (Le)
        byte[] cmd = {(byte) 0xA0, (byte) 0x19, (byte) 0x00, (byte) 0x00};
        byte[] data = pin.getBytes();
        setCommandAPDU(cmd, (byte) lc, data, (byte) le);
        connect.sendAPDUtoApplet(cmd, data);
        byte[] dataRes = connect.resAPDU.getData();
        int lenRes = connect.resAPDU.getNr();
        setResponseAPDU(dataRes, (byte) lenRes);
        if (dataRes[0] == (byte) 0x01) {//đúng mã PIN
            return 1;
        } else if (dataRes[0] == (byte) 0x02) {
            return 2;
        } else if (dataRes[0] == (byte) 0x03) {
            return 3;
        } else if (dataRes[0] == (byte) 0x00) {
            return 0;
        } else {
            return 4;
        }
    }

    public String getTime() {
        Date currentDate = new Date();

        // convert date to calendar
        Calendar c = Calendar.getInstance();
        c.setTime(currentDate);

        // manipulate date
        c.add(Calendar.DATE, addDay);

        // convert calendar to date
        Date currentDatePlusOne = c.getTime();

        String time = new SimpleDateFormat("HH:mm dd/MM/yyyy").format(currentDatePlusOne);
        return time;
    }

    // check verify sign
    public void getRamdomData() {
        byte[] cmdCreateData = {(byte) 0xA0, (byte) 0x25, (byte) 0x00, (byte) 0x00};
        connect.sendAPDUtoApplet(cmdCreateData);
        byte[] a = connect.resAPDU.getData();
        ramData = "";
        for (int i = 0; i < a.length; i++) {
            ramData += connect.byteToHex(a[i]);
        }
    }

    public boolean checkVerifyUser() {
        boolean verify = true;
        getRamdomData();
        String pin = Arrays.toString(txt_pin.getPassword());
        byte[] cmdcreateSig = {(byte) 0xA0, (byte) 0x25, (byte) 0x01, (byte) 0x00};
        String arraysend = ramData.concat(pin);
        connect.sendAPDUtoApplet(cmdcreateSig, arraysend.getBytes());
        byte[] res = connect.resAPDU.getData();
        if (res.length == 1 || connect.resAPDU.getSW1() != 0x90) {
            JOptionPane.showMessageDialog(this, "Xác thực không thành công. Mã PIN không đúng");
        } else {
            byte[] input = arraysend.getBytes();
            String resCheck = String.format("%x", new BigInteger(1, res));
            boolean verifyCheck = true;
            try {
                verifyCheck = Verify_Digital_Signature(input, resCheck.getBytes());
            } catch (Exception ex) {
//                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (verifyCheck) {
                // verify thành công, tiếp tục xử lý
                System.out.println("verify thành công!!!");
                verify = true;
            } else {
                JOptionPane.showMessageDialog(this, "Xác thực lỗi");
            }
        }
        return verify;
    }

    public boolean Verify_Digital_Signature(byte[] input, byte[] signatureToVerify) throws Exception {
        List dataCard = MySQLConnect.queryDatabase(infoNhanVien.getMaNV());
        String publicKeyData = dataCard.toArray()[1].toString();
        BigInteger moPubKey = new BigInteger(publicKeyData.split("/")[0]);
        BigInteger exPubKey = new BigInteger(publicKeyData.split("/")[1]);
        KeyFactory keyFactory = KeyFactory.getInstance("RSA");
        RSAPublicKeySpec pubKeySpec = new RSAPublicKeySpec(moPubKey, exPubKey); // khoi tao khoa publickey theo kieu ma hoa RSA
        PublicKey key = (RSAPublicKey) keyFactory.generatePublic(pubKeySpec);
        Signature signature = Signature.getInstance("MD5WithRSA"); // tao ra chu ky
        signature.initVerify(key);
        signature.update(signatureToVerify);
        return signature.verify(signatureToVerify);
    }

    private void getPublicKey() {
        byte[] getModulusPubkey = {(byte) 0xA0, (byte) 0x22, (byte) 0x01, (byte) 0x01};
        connect.sendAPDUtoApplet(getModulusPubkey);
        BigInteger resModulusPubkey = new BigInteger(1, connect.resAPDU.getData());
        byte[] getExponentPubkey = {(byte) 0xA0, (byte) 0x22, (byte) 0x02, (byte) 0x01};
        connect.sendAPDUtoApplet(getExponentPubkey);
        BigInteger resExponentPubkey = new BigInteger(1, connect.resAPDU.getData());

        modulusPubkey = resModulusPubkey;
        exponentPubkey = resExponentPubkey;
        System.out.println("pubkey: " + modulusPubkey + " / " + exponentPubkey);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Xemtt;
    private javax.swing.JButton Btn_thayanh;
    private javax.swing.JButton Button_Disconnect;
    private javax.swing.JButton Button_Unblock;
    private javax.swing.JButton Button_connect;
    private javax.swing.JButton addOneDay;
    private javax.swing.JLabel anhthe;
    private javax.swing.JButton btn_capnhat;
    private javax.swing.JButton btn_changePIN;
    private javax.swing.JButton btn_checkin;
    private javax.swing.JButton btn_checkout;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_init;
    private javax.swing.JButton btn_sendata;
    private javax.swing.JButton btn_thongke;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel_info;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lab_showDay;
    private javax.swing.JLabel txt_checkin;
    private javax.swing.JLabel txt_checkout;
    private javax.swing.JLabel txt_chucvu;
    private javax.swing.JTextField txt_cla;
    private javax.swing.JTextField txt_cmd;
    private javax.swing.JLabel txt_hoten;
    private javax.swing.JTextField txt_ins;
    private javax.swing.JTextField txt_lc;
    private javax.swing.JTextField txt_le;
    private javax.swing.JLabel txt_manv;
    private javax.swing.JLabel txt_ngaysinh;
    private javax.swing.JTextField txt_p1;
    private javax.swing.JTextField txt_p2;
    private javax.swing.JPasswordField txt_pin;
    private javax.swing.JTextField txt_respon;
    private javax.swing.JTextField txt_sw1;
    private javax.swing.JTextField txt_sw2;
    // End of variables declaration//GEN-END:variables
}
